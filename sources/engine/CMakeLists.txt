add_library(Engine
    src/precompiled.cpp
    src/ogcamera.cpp
    src/ogcamera.h
    src/ogcoloreffectshader.cpp
    src/ogcoloreffectshader.h
    src/ogdynvertexbuffers.cpp
    src/ogdynvertexbuffers.h
    src/ogeffect.cpp
    src/ogeffect.h
    src/ogeffectsmanager.cpp
    src/ogeffectsmanager.h
    src/ogemitter.cpp
    src/ogemitter.h
    src/ogemitteranimatedbb.cpp
    src/ogemitteranimatedbb.h
    src/ogemitterglow.cpp
    src/ogemitterglow.h
    src/ogemitterlightflash.cpp
    src/ogemitterlightflash.h
    src/ogemitterparticlechain.cpp
    src/ogemitterparticlechain.h
    src/ogemitterpulseglow.cpp
    src/ogemitterpulseglow.h
    src/ogemitterringwave.cpp
    src/ogemitterringwave.h
    src/ogemitterrotatingsparks.cpp
    src/ogemitterrotatingsparks.h
    src/ogemitterscrollingray.cpp
    src/ogemitterscrollingray.h
    src/ogemittertrail.cpp
    src/ogemittertrail.h
    src/ogfog.cpp
    src/ogfog.h
    src/ogfpscounter.cpp
    src/ogfpscounter.h
    src/ogglobalvarstable.cpp
    src/ogglobalvarstable.h
    src/oginputdispatcher.cpp
    src/oginputdispatcher.h
    src/oglight.cpp
    src/oglight.h
    src/ogmaterial.cpp
    src/ogmaterial.h
    src/ogmatrix.cpp
    src/ogmesh.cpp
    src/ogmesh.h
    src/ogmodel.cpp
    src/ogmodel.h
    src/ogmodelconfig.cpp
    src/ogmodelconfig.h
    src/ogmodelshader.cpp
    src/ogmodelshader.h
    src/ogmodelskeleton.cpp
    src/ogmodelskeleton.h
    src/ogquaternion.cpp
    src/ogrenderer.cpp
    src/ogrenderer.h
    src/ogrendertarget.cpp
    src/ogrendertarget.h
    src/ogresource.cpp
    src/ogresource.h
    src/ogresourcefile.cpp
    src/ogresourcefile.h
    src/ogresourcemgr.cpp
    src/ogresourcemgr.h
    src/ogsettingsreader.cpp
    src/ogsettingsreader.h
    src/ogshader.cpp
    src/ogshader.h
    src/ogshadermanager.cpp
    src/ogshadermanager.h
    src/ogshadowedsceneshader.cpp
    src/ogshadowedsceneshader.h
    src/ogshadowedtranspsceneshader.cpp
    src/ogshadowedtranspsceneshader.h
    src/ogshadowmodelshader.cpp
    src/ogshadowmodelshader.h
    src/ogshadowtranspmodelshader.cpp
    src/ogshadowtranspmodelshader.h
    src/ogsprite.cpp
    src/ogsprite.h
    src/ogspriteshader.cpp
    src/ogspriteshader.h
    src/ogstatistics.cpp
    src/ogstatistics.h
    src/ogtextrenderer.cpp
    src/ogtextrenderer.h
    src/ogtextrenderer_data.h
    src/ogtextshader.cpp
    src/ogtextshader.h
    src/ogtexture.cpp
    src/ogtexture.h
    src/ogtransparentmodelshader.cpp
    src/ogtransparentmodelshader.h
    src/ogvector.cpp
    src/ogvertexbuffers.cpp
    src/ogvertexbuffers.h
    src/OrangeGrass.cpp
    include/common.h
    include/IOGAabb.h
    include/IOGAnimation.h
    include/IOGAnimationManager.h
    include/IOGCamera.h
    include/IOGCoreHelpers.h
    include/IOGDynVertexBuffers.h
    include/IOGEffect.h
    include/IOGEffectsManager.h
    include/IOGEmitter.h
    include/IOGFog.h
    include/IOGFPSCounter.h
    include/IOGFrustum.h
    include/IOGGameSystem.h
    include/IOGGeometry.h
    include/IOGGlobalVarsTable.h
    include/IOGInputDispatcher.h
    include/IOGInputReceiver.h
    include/IOGLight.h
    include/IOGMaterial.h
    include/IOGMath.h
    include/IOGMatrix.h
    include/IOGMesh.h
    include/IOGModel.h
    include/IOGModelSkeleton.h
    include/IOGObb.h
    include/IOGPlane.h
    include/IOGQuaternion.h
    include/IOGRenderable.h
    include/IOGRenderer.h
    include/IOGRenderTypes.h
    include/IOGResourceFile.h
    include/IOGResourceMgr.h
    include/IOGScreenController.h
    include/IOGSettingsReader.h
    include/IOGShader.h
    include/IOGShaderManager.h
    include/IOGSprite.h
    include/IOGStatistics.h
    include/IOGTexture.h
    include/IOGVector.h
    include/IOGVertexBuffers.h
    include/OpenGL2.h
    include/OrangeGrass.h
#
    src/pvr/POD.cpp
    src/pvr/POD.h
    src/pvr/PVRTC.cpp
    src/pvr/PVRTC.h
)

if (WIN32)
    target_precompile_headers(Engine PUBLIC src/precompiled.h)

    target_compile_definitions(Engine PRIVATE
                    -D_CRT_SECURE_NO_WARNINGS
                    -D_UNICODE
                    -DGLEW_STATIC
                    -DNOMINMAX
    )

endif()

target_include_directories(Engine
    PUBLIC include
           3rdparty/glew/include
    PRIVATE
           src
)

target_link_libraries(Engine 3rdparty_libraries)
